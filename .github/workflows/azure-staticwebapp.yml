name: Deploy web app to Azure Static Web Apps

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ "master" ]

env:
  APP_LOCATION: "/" # Ort deiner Blazor-Anwendung
  APP_ARTIFACT_LOCATION: "wwwroot" # Ort der Build-Ausgabe
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # Verweist auf dein Secret

jobs:
  build_and_deploy_job:
    permissions:
      contents: read
      pull-requests: write
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Schritt zur Wiederherstellung von NuGet-Paketen
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x' # Verwende die Version von .NET, die du benötigst

      - name: Restore NuGet packages
        run: dotnet restore
        
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # Das Secret für das Deployment-Token
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Für GitHub-Integrationen
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          api_location: "" # Wenn keine API vorhanden ist, leer lassen
          app_artifact_location: ${{ env.APP_ARTIFACT_LOCATION }}

  close_pull_request_job:
    permissions:
      contents: none
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # Das Secret für das Deployment-Token
          action: "close"
